rt = [0] * n 
  
    # Copy the burst time into rt[]  
    for i in range(n):  
        rt[i] = processes[i][1] 
    complete = 0
    t = 0
    minm = 999999999
    short = 0
    check = False
  
    # Process until all processes gets  
    # completed  
    while (complete != n): 
          
        # Find process with minimum remaining  
        # time among the processes that  
        # arrives till the current time` 
        for j in range(n): 
            if ((processes[j][2] <= t) and 
                (rt[j] < minm) and rt[j] > 0): 
                minm = rt[j] 
                short = j 
                check = True
        if (check == False): 
            t += 1
            continue
              
        # Reduce remaining time by one  
        rt[short] -= 1
  
        # Update minimum  
        minm = rt[short]  
        if (minm == 0):  
            minm = 999999999
  
        # If a process gets completely  
        # executed  
        if (rt[short] == 0):  
  
            # Increment complete  
            complete += 1
            check = False
  
            # Find finish time of current  
            # process  
            fint = t + 1
  
            # Calculate waiting time  
            wt[short] = (fint - proc[short][1] -    
                                proc[short][2]) 
  
            if (wt[short] < 0): 
                wt[short] = 0
          
        # Increment time  
        t += 1
